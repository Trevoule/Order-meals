{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Desktop/Work - Backup/React/react-meals/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [error, setError] = useState(\"\");\n  const asyncMealsHandler = useCallback(async () => {\n    try {\n      const response = await fetch(\"https://react-fetch-movies-12638-default-rtdb.firebaseio.com/meals.json\");\n      setIs;\n\n      if (!response.ok) {\n        throw new Error(\"Fetch unsuccessful!\");\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key of Object.keys(data)) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n  useEffect(() => {\n    asyncMealsHandler();\n  }, [asyncMealsHandler]);\n  const mealsList = meals.map(meal => console.log(meal) // <MealItem\n  //   key={meal.id}\n  //   id={meal.id}\n  //   name={meal.name}\n  //   description={meal.description}\n  //   price={meal.price}\n  // />\n  );\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes[\"available-meals\"],\n    children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Pe+3wgcjlaC1J0rzDbF7BdFEQOI=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/home/vladislav/Desktop/Work - Backup/React/react-meals/src/components/Meals/AvailableMeals.js"],"names":["classes","Card","MealItem","useState","useCallback","useEffect","AvailableMeals","meals","setMeals","error","setError","asyncMealsHandler","response","fetch","setIs","ok","Error","data","json","loadedMeals","key","Object","keys","push","id","name","description","price","message","mealsList","map","meal","console","log"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,iBAAiB,GAAGP,WAAW,CAAC,YAAY;AAChD,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yEAD0B,CAA5B;AAIAC,MAAAA,KAAK;;AACL,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYL,IAAZ,CAAlB,EAAqC;AACnCE,QAAAA,WAAW,CAACI,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEJ,GADW;AAEfK,UAAAA,IAAI,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK,IAFD;AAGfC,UAAAA,WAAW,EAAET,IAAI,CAACG,GAAD,CAAJ,CAAUM,WAHR;AAIfC,UAAAA,KAAK,EAAEV,IAAI,CAACG,GAAD,CAAJ,CAAUO;AAJF,SAAjB;AAMD;;AACDnB,MAAAA,QAAQ,CAACW,WAAD,CAAR;AACD,KAtBD,CAsBE,OAAOV,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACmB,OAAP,CAAR;AACD;AACF,GA1BoC,EA0BlC,EA1BkC,CAArC;AA4BAvB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,QAAMkB,SAAS,GAAGtB,KAAK,CAACuB,GAAN,CAAWC,IAAD,IAC1BC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AARgB,GAAlB;AAWA,sBACE;AAAS,IAAA,SAAS,EAAE/B,OAAO,CAAC,iBAAD,CAA3B;AAAA,2BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtDD;;GAAMM,c;;KAAAA,c;AAwDN,eAAeA,cAAf","sourcesContent":["import classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { useState, useCallback, useEffect } from \"react\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const asyncMealsHandler = useCallback(async () => {\n    try {\n      const response = await fetch(\n        \"https://react-fetch-movies-12638-default-rtdb.firebaseio.com/meals.json\"\n      );\n\n      setIs\n      if (!response.ok) {\n        throw new Error(\"Fetch unsuccessful!\");\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key of Object.keys(data)) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n\n  useEffect(() => {\n    asyncMealsHandler();\n  }, [asyncMealsHandler]);\n\n  const mealsList = meals.map((meal) => (\n    console.log(meal)\n    // <MealItem\n    //   key={meal.id}\n    //   id={meal.id}\n    //   name={meal.name}\n    //   description={meal.description}\n    //   price={meal.price}\n    // />\n  ));\n\n  return (\n    <section className={classes[\"available-meals\"]}>\n      <Card>\n        {/* <ul>{mealsList}</ul> */}\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}