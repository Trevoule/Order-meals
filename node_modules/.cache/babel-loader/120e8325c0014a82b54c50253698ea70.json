{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Desktop/Work - Backup/React/react-meals/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchUrl = \"https://react-fetch-movies-12638-default-rtdb.firebaseio.com/meals.json\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const asyncMealsHandler = useCallback(async () => {\n    try {\n      const response = await fetch(fetchUrl);\n      setError(false);\n\n      if (!response.ok) {\n        throw new Error(\"Fetch unsuccessful!\");\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    asyncMealsHandler();\n  }, [asyncMealsHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no meals.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 15\n  }, this);\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n\n  if (meals.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes[\"available-meals\"],\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"ES3V1bQ/YPzem/RF5PAxs4ufdI8=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/home/vladislav/Desktop/Work - Backup/React/react-meals/src/components/Meals/AvailableMeals.js"],"names":["classes","Card","MealItem","useState","useCallback","useEffect","fetchUrl","AvailableMeals","meals","setMeals","error","setError","isLoading","setIsLoading","asyncMealsHandler","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","message","content","mealsList","map","meal","length"],"mappings":"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","sourcesContent":["import classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { useState, useCallback, useEffect } from \"react\";\n\nconst fetchUrl =\n  \"https://react-fetch-movies-12638-default-rtdb.firebaseio.com/meals.json\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  const asyncMealsHandler = useCallback(async () => {\n    try {\n      const response = await fetch(fetchUrl);\n\n      setError(false);\n\n      if (!response.ok) {\n        throw new Error(\"Fetch unsuccessful!\");\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    asyncMealsHandler();\n  }, [asyncMealsHandler]);\n\n\nlet content = <p>Found no meals.</p>;\n\n  if (isLoading) {\n    content = <section></section>;\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  \n\n  if (meals.length > 0) {\n    content = <ul>{mealsList}</ul>;\n  }\n\n  if (error) {\n    content = <p className=\"\">{error}</p>;\n  }\n\n\n  return (\n    <section className={classes[\"available-meals\"]}>\n      <Card>\n        {content}\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}