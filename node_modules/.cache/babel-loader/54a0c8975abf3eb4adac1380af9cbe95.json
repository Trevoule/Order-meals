{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  console.log(hasError);\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHanlder = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHanlder,\n    reset\n  };\n};\n\n_s(useInput, \"uN9KnldpqRIT2LwByiGz+Mp8wEw=\");\n\nexport default useInput;","map":{"version":3,"sources":["/home/vladislav/Desktop/Work - Backup/React/react-meals/src/components/hooks/use-input.js"],"names":["useState","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","console","log","valueChangeHandler","event","target","value","inputBlurHanlder","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,QAAMG,kBAAkB,GAAGC,KAAK,IAAI;AAChCR,IAAAA,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGH,KAAK,IAAI;AAC9BN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMU,KAAK,GAAG,MAAM;AAChBZ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHQ,IAAAA,KAAK,EAAEX,YADJ;AAEHc,IAAAA,OAAO,EAAEV,YAFN;AAGHC,IAAAA,QAHG;AAIHG,IAAAA,kBAJG;AAKHI,IAAAA,gBALG;AAMHC,IAAAA;AANG,GAAP;AAQH,CA7BD;;GAAMf,Q;;AA+BN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\"\n\nconst useInput = (validateValue) => {\n    const [enteredValue, setEnteredValue] = useState('')\n    const [isTouched, setIsTouched] = useState(false)\n\n    const valueIsValid = validateValue(enteredValue)\n    const hasError = !valueIsValid && isTouched\n    console.log(hasError);\n\n    const valueChangeHandler = event => {\n        setEnteredValue(event.target.value)\n    }\n\n    const inputBlurHanlder = event => {\n        setIsTouched(true)\n    }\n\n    const reset = () => {\n        setEnteredValue('')\n        setIsTouched(false)\n    }\n\n    return {\n        value: enteredValue,\n        isValid: valueIsValid,\n        hasError,\n        valueChangeHandler,\n        inputBlurHanlder,\n        reset\n    }\n}\n\nexport default useInput"]},"metadata":{},"sourceType":"module"}